"""
Django settings for gemini project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-secret-key'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['l1v17r2xqk.execute-api.us-east-2.amazonaws.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tailwind',  # using Tailwind CSS
    'theme',
    'crispy_forms',
    'crispy_tailwind',
    'users',
    'posts',
    'django_s3_storage'  # dependency for s3 storage, check requirements.txt
    # 'zappa_django_utils' utility for init the MySQL db, on terminal: "zappa manage dev create_mysql_db"
]

INTERNAL_IPS = [
    "127.0.0.1",
]
# tailwind theme name
TAILWIND_APP_NAME = 'theme'

# crispy tailwind
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gemini.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['theme/templates'],  # specifies the template directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  # otherwise it won't let me to use MEDIA_URL const
            ],
        },
    },
]

WSGI_APPLICATION = 'gemini.wsgi.application'

# Database, on AWS, username=admin, password=f389jdms3Kz
# 'ENGINE': 'django.db.backends.mysql',
# 'NAME': 'gemini',
# 'USER': 'gemini',
# 'PASSWORD': 'gemini',
# 'HOST': 'localhost'
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'gemini',
        'USER': 'admin',
        'PASSWORD': 'f389jdms3Kz',
        'HOST': 'django-zappa-database.us-east-2.rds.amazonaws.com',
        'PORT': '3306'
    }
}
# "vpc_config" : {
#            "SubnetIds": ["subnet-a899abe4", "subnet-1b920e70", "subnet-7901cb04"],
#           "SecurityGroupIds": ["sg-7ff41233"]
#       }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Login and Logout redirector
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'it'

TIME_ZONE = 'CET'

USE_I18N = False

USE_L10N = False

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django S3 Storage configuration
S3_BUCKET_NAME = "zappa-zm3ayvkoi"
STATICFILES_STORAGE = "django_s3_storage.storage.StaticS3Storage"
AWS_S3_BUCKET_NAME_STATIC = S3_BUCKET_NAME
# serve the static files directly from the specified s3 bucket
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % S3_BUCKET_NAME
STATIC_URL = "https://%s/" % AWS_S3_CUSTOM_DOMAIN

# images folder:
MEDIA_URL = 'https://zappa-zm3ayvkoi.s3.us-east-2.amazonaws.com/images/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'dev/images/')
# MEDIA_ROOT = os.path.join(BASE_DIR, 'theme/static/images')
